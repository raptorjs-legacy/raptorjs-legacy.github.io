!function(e){"use strict";var t=function(e,t){this.init("tooltip",e,t)};t.prototype={constructor:t,init:function(t,n,r){var i,s;this.type=t,this.$element=e(n),this.options=this.getOptions(r),this.enabled=!0,this.options.trigger!="manual"&&(i=this.options.trigger=="hover"?"mouseenter":"focus",s=this.options.trigger=="hover"?"mouseleave":"blur",this.$element.on(i,this.options.selector,e.proxy(this.enter,this)),this.$element.on(s,this.options.selector,e.proxy(this.leave,this))),this.options.selector?this._options=e.extend({},this.options,{trigger:"manual",selector:""}):this.fixTitle()},getOptions:function(t){return t=e.extend({},e.fn[this.type].defaults,t,this.$element.data()),t.delay&&typeof t.delay=="number"&&(t.delay={show:t.delay,hide:t.delay}),t},enter:function(t){var n=e(t.currentTarget)[this.type](this._options).data(this.type);if(!n.options.delay||!n.options.delay.show)return n.show();clearTimeout(this.timeout),n.hoverState="in",this.timeout=setTimeout(function(){n.hoverState=="in"&&n.show()},n.options.delay.show)},leave:function(t){var n=e(t.currentTarget)[this.type](this._options).data(this.type);this.timeout&&clearTimeout(this.timeout);if(!n.options.delay||!n.options.delay.hide)return n.hide();n.hoverState="out",this.timeout=setTimeout(function(){n.hoverState=="out"&&n.hide()},n.options.delay.hide)},show:function(){var e,t,n,r,i,s,o;if(this.hasContent()&&this.enabled){e=this.tip(),this.setContent(),this.options.animation&&e.addClass("fade"),s=typeof this.options.placement=="function"?this.options.placement.call(this,e[0],this.$element[0]):this.options.placement,t=/in/.test(s),e.remove().css({top:0,left:0,display:"block"}).appendTo(t?this.$element:document.body),n=this.getPosition(t),r=e[0].offsetWidth,i=e[0].offsetHeight;switch(t?s.split(" ")[1]:s){case"bottom":o={top:n.top+n.height,left:n.left+n.width/2-r/2};break;case"top":o={top:n.top-i,left:n.left+n.width/2-r/2};break;case"left":o={top:n.top+n.height/2-i/2,left:n.left-r};break;case"right":o={top:n.top+n.height/2-i/2,left:n.left+n.width}}e.css(o).addClass(s).addClass("in")}},isHTML:function(e){return typeof e!="string"||e.charAt(0)==="<"&&e.charAt(e.length-1)===">"&&e.length>=3||/^(?:[^<]*<[\w\W]+>[^>]*$)/.exec(e)},setContent:function(){var e=this.tip(),t=this.getTitle();e.find(".tooltip-inner")[this.isHTML(t)?"html":"text"](t),e.removeClass("fade in top bottom left right")},hide:function(){function r(){var t=setTimeout(function(){n.off(e.support.transition.end).remove()},500);n.one(e.support.transition.end,function(){clearTimeout(t),n.remove()})}var t=this,n=this.tip();n.removeClass("in"),e.support.transition&&this.$tip.hasClass("fade")?r():n.remove()},fixTitle:function(){var e=this.$element;(e.attr("title")||typeof e.attr("data-original-title")!="string")&&e.attr("data-original-title",e.attr("title")||"").removeAttr("title")},hasContent:function(){return this.getTitle()},getPosition:function(t){return e.extend({},t?{top:0,left:0}:this.$element.offset(),{width:this.$element[0].offsetWidth,height:this.$element[0].offsetHeight})},getTitle:function(){var e,t=this.$element,n=this.options;return e=t.attr("data-original-title")||(typeof n.title=="function"?n.title.call(t[0]):n.title),e},tip:function(){return this.$tip=this.$tip||e(this.options.template)},validate:function(){this.$element[0].parentNode||(this.hide(),this.$element=null,this.options=null)},enable:function(){this.enabled=!0},disable:function(){this.enabled=!1},toggleEnabled:function(){this.enabled=!this.enabled},toggle:function(){this[this.tip().hasClass("in")?"hide":"show"]()}},e.fn.tooltip=function(n){return this.each(function(){var r=e(this),i=r.data("tooltip"),s=typeof n=="object"&&n;i||r.data("tooltip",i=new t(this,s)),typeof n=="string"&&i[n]()})},e.fn.tooltip.Constructor=t,e.fn.tooltip.defaults={animation:!0,placement:"top",selector:!1,template:'<div class="tooltip"><div class="tooltip-arrow"></div><div class="tooltip-inner"></div></div>',trigger:"hover",title:"",delay:0}}(window.jQuery);
!function(e){"use strict";var t=function(e,t){this.init("popover",e,t)};t.prototype=e.extend({},e.fn.tooltip.Constructor.prototype,{constructor:t,setContent:function(){var e=this.tip(),t=this.getTitle(),n=this.getContent();e.find(".popover-title")[this.isHTML(t)?"html":"text"](t),e.find(".popover-content > *")[this.isHTML(n)?"html":"text"](n),e.removeClass("fade top bottom left right in")},hasContent:function(){return this.getTitle()||this.getContent()},getContent:function(){var e,t=this.$element,n=this.options;return e=t.attr("data-content")||(typeof n.content=="function"?n.content.call(t[0]):n.content),e},tip:function(){return this.$tip||(this.$tip=e(this.options.template)),this.$tip}}),e.fn.popover=function(n){return this.each(function(){var r=e(this),i=r.data("popover"),s=typeof n=="object"&&n;i||r.data("popover",i=new t(this,s)),typeof n=="string"&&i[n]()})},e.fn.popover.Constructor=t,e.fn.popover.defaults=e.extend({},e.fn.tooltip.defaults,{placement:"right",content:"",template:'<div class="popover"><div class="arrow"></div><div class="popover-inner"><h3 class="popover-title"></h3><div class="popover-content"><p></p></div></div></div>'})}(window.jQuery);
define("components.overlays.Popover.PopoverWidget",["raptor"],function(e,t){return{initWidget:function(e){$("#"+e.elId).popover(e)}}});
!function(e){"use strict";function r(){e(t).parent().removeClass("open")}var t='[data-toggle="dropdown"]',n=function(t){var n=e(t).on("click.dropdown.data-api",this.toggle);e("html").on("click.dropdown.data-api",function(){n.parent().removeClass("open")})};n.prototype={constructor:n,toggle:function(t){var n=e(this),i,s,o;if(n.is(".disabled, :disabled"))return;return s=n.attr("data-target"),s||(s=n.attr("href"),s=s&&s.replace(/.*(?=#[^\s]*$)/,"")),i=e(s),i.length||(i=n.parent()),o=i.hasClass("open"),r(),o||i.toggleClass("open"),!1}},e.fn.dropdown=function(t){return this.each(function(){var r=e(this),i=r.data("dropdown");i||r.data("dropdown",i=new n(this)),typeof t=="string"&&i[t].call(r)})},e.fn.dropdown.Constructor=n,e(function(){e("html").on("click.dropdown.data-api",r),e("body").on("click.dropdown",".dropdown form",function(e){e.stopPropagation()}).on("click.dropdown.data-api",t,n.prototype.toggle)})}(window.jQuery);
!function(e){"use strict";var t=function(t,n){this.$element=e(t),this.options=e.extend({},e.fn.button.defaults,n)};t.prototype.setState=function(e){var t="disabled",n=this.$element,r=n.data(),i=n.is("input")?"val":"html";e+="Text",r.resetText||n.data("resetText",n[i]()),n[i](r[e]||this.options[e]),setTimeout(function(){e=="loadingText"?n.addClass(t).attr(t,t):n.removeClass(t).removeAttr(t)},0)},t.prototype.toggle=function(){var e=this.$element.parent('[data-toggle="buttons-radio"]');e&&e.find(".active").removeClass("active"),this.$element.toggleClass("active")},e.fn.button=function(n){return this.each(function(){var r=e(this),i=r.data("button"),s=typeof n=="object"&&n;i||r.data("button",i=new t(this,s)),n=="toggle"?i.toggle():n&&i.setState(n)})},e.fn.button.defaults={loadingText:"loading..."},e.fn.button.Constructor=t,e(function(){e("body").on("click.button.data-api","[data-toggle^=button]",function(t){var n=e(t.target);n.hasClass("btn")||(n=n.closest(".btn")),n.button("toggle")})})}(window.jQuery);
define.Class("components.social.Disqus.DisqusWidget",["raptor"],function(e,t){var n=function(e){window.disqus_shortname=e.shortName,e.id&&(window.disqus_identifier=e.id),e.title&&(window.disqus_title=e.title);var t=document.createElement("script");t.type="text/javascript",t.async=!0,t.src="http://"+e.shortName+".disqus.com/embed.js",(document.getElementsByTagName("head")[0]||document.getElementsByTagName("body")[0]).appendChild(t)};return n.prototype={},n});
define.Class("raptor/templating/taglibs/core/AssignNode","raptor/templating/compiler/Node",["raptor"],function(e,t){"use strict";var n=/^[A-Za-z_][A-Za-z0-9_]*$/,r=function(e){r.superclass.constructor.call(this),e&&this.setProperties(e)};return r.prototype={doGenerateCode:function(e){var t=this.getProperty("var"),r=this.getProperty("value");t?n.test(t)||(this.addError('Invalid variable name of "'+t+'"'),t=null):this.addError('"var" attribute is required'),r||this.addError('"value" attribute is required'),t&&e.statement(t+"="+r+";")}},r});
function removeDashes(e){return e.replace(/-([a-z])/g,function(e,t){return t.toUpperCase()})}define.Class("raptor/templating/taglibs/core/CoreTagTransformer",["raptor"],function(e,t){"use strict";var n=e.extend,r="http://raptorjs.org/templates/core",i=t("raptor/templating/taglibs/core/WriteNode"),s=t("raptor/templating/taglibs/core/ForNode"),o=t("raptor/templating/taglibs/core/IfNode"),u=t("raptor/templating/taglibs/core/ElseIfNode"),a=t("raptor/templating/taglibs/core/ElseNode"),f=t("raptor/templating/taglibs/core/WithNode"),l=t("raptor/templating/taglibs/core/WhenNode"),c=t("raptor/templating/taglibs/core/OtherwiseNode"),h=t("raptor/templating/taglibs/core/TagHandlerNode"),p=t("raptor/templating/taglibs/core/IncludeNode"),d=t("raptor/templating/compiler/Expression"),v=t("raptor/templating/compiler/AttributeSplitter"),m=t("raptor/templating/compiler/TypeConverter"),g=function(e,t,n){return m.convert(e,t,n)};return{process:function(e,m,y){this.findNestedAttrs(e,m,y);var b,w,E,S,x,T,N,C,k,L,A,O,M,_,D,P,H=function(t,n){e.forEachAttributeAnyNS(function(r){if(r.uri==="http://www.w3.org/2000/xmlns/"||r.uri==="http://www.w3.org/XML/1998/namespace"||r.prefix=="xmlns")return;var i=r.prefix,s=m.taglibs.resolveURI(r.uri);s=r.prefix&&s!=D.getTaglibUri()?r.uri:null;var o=m.taglibs.getAttribute(_,e.localName,s,r.localName),u=o?o.type||"string":"string",a;s===D.getTaglibUri()&&(i="");var f=y.isTaglib(s);if(!o&&(f||!D.dynamicAttributes)){e.addError('The tag "'+D.name+'" in taglib "'+D.getTaglibUri()+'" does not support attribute "'+r+'"');return}if(r.value instanceof d)a=r.value;else try{a=g(r.value,u,o?o.allowExpressions!==!1:!0)}catch(l){e.addError('Invalid attribute value of "'+r.value+'" for attribute "'+r.name+'": '+l.message),a=r.value}var c;o?o.targetProperty?c=o.targetProperty:o.preserveName?c=r.localName:c=removeDashes(r.localName):c=r.localName,t.call(n,s,c,a,i,o)},this),D.forEachStaticProperty(function(e){var r=g(e.value,e.type,!1);t.call(n,"",e.name,r,"",e)})};_=e.uri,!_&&e.isRoot()&&e.localName==="template"&&(_=r);if(e.parentNode){var B=e.parentNode.uri,j=e.parentNode.localName;P=m.taglibs.getNestedTag(B,j,_,e.localName);if(P){e.setWordWrapEnabled(!1),e.parentNode.setProperty(P.targetProperty,e.getBodyContentExpression(y)),e.detach();return}}D=e.tag||m.taglibs.getTag(_,e.localName),(e.getAttributeNS(r,"space")==="preserve"||e.getAttributeNS(r,"whitespace")==="preserve")&&e.setPreserveWhitespace(!0),e.removeAttributeNS(r,"space"),e.removeAttributeNS(r,"whitespace"),(N=e.getAttributeNS(r,"escape-xml"))!=null&&(e.removeAttributeNS(r,"escape-xml"),e.setEscapeXmlBodyText(N!=="false")),(C=e.getAttributeNS(r,"parse-body-text"))!=null&&(e.removeAttributeNS(r,"parse-body-text"),e.parseBodyText=C!=="false");if((x=e.getAttributeNS(r,"when"))!=null){e.removeAttributeNS(r,"when");var F=new l({test:new d(x),pos:e.getPosition()});e.parentNode.replaceChild(F,e),F.appendChild(e)}if(e.getAttributeNS(r,"otherwise")!=null){e.removeAttributeNS(r,"otherwise");var I=new c({pos:e.getPosition()});e.parentNode.replaceChild(I,e),I.appendChild(e)}(S=e.getAttributeNS(r,"attrs"))!=null&&(e.removeAttributeNS(r,"attrs"),e.dynamicAttributesExpression=S);if(((b=e.getAttributeNS(r,"for"))||(b=e.getAttributeNS(r,"for-each")))!=null){e.removeAttributeNS(r,"for"),e.removeAttributeNS(r,"for-each");var q=v.parse(b,{each:{type:"custom"},separator:{type:"expression"},"status-var":{type:"identifier"},"for-loop":{type:"boolean",allowExpressions:!1}},{removeDashes:!0,defaultName:"each",errorHandler:function(t){e.addError('Invalid c:for attribute of "'+b+'". Error: '+t)}});q.pos=e.getPosition(),M=new s(q),e.parentNode.replaceChild(M,e),M.appendChild(e)}if((w=e.getAttributeNS(r,"if"))!=null){e.removeAttributeNS(r,"if");var R=new o({test:new d(w),pos:e.getPosition()});e.parentNode.replaceChild(R,e),R.appendChild(e)}if((E=e.getAttributeNS(r,"else-if"))!=null){e.removeAttributeNS(r,"else-if");var U=new u({test:new d(E),pos:e.getPosition()});e.parentNode.replaceChild(U,e),U.appendChild(e)}if(e.getAttributeNS(r,"else")!=null){e.removeAttributeNS(r,"else");var z=new a({pos:e.getPosition()});e.parentNode.replaceChild(z,e),z.appendChild(e)}if((T=e.getAttributeNS(r,"with"))!=null){e.removeAttributeNS(r,"with");var W=new f({vars:T,pos:e.getPosition()});e.parentNode.replaceChild(W,e),W.appendChild(e)}if((L=e.getAttributeNS(r,"bodyContent")||e.getAttributeNS(r,"content"))!=null){e.removeAttributeNS(r,"bodyContent"),e.removeAttributeNS(r,"content");var X=new i({expression:L,pos:e.getPosition()});e.removeChildren(),e.appendChild(X)}e.getAttributeNS(r,"trim-body-indent")==="true"&&(e.removeAttributeNS(r,"trim-body-indent"),e.trimBodyIndent=!0),e.getAttributeNS&&(k=e.getAttributeNS(r,"strip"))!=null&&(e.removeAttributeNS(r,"strip"),e.setStripExpression||e.addError("The c:strip directive is not allowed for target node"),e.setStripExpression(k));if(e.getAttributeNS&&(A=e.getAttributeNS(r,"replace"))!=null){e.removeAttributeNS(r,"replace");var V=new i({expression:A,pos:e.getPosition()});e.parentNode.replaceChild(V,e),e=V}if(D){D.preserveWhitespace&&e.setPreserveWhitespace(!0);if(D.handlerClass||D.template)D.handlerClass?(h.convertNode(e,D),(O=e.getAttributeNS(r,"input"))!=null&&(e.removeAttributeNS(r,"input"),e.setInputExpression(y.makeExpression(O)))):p.convertNode(e,D.template),H(function(t,n,r,i,s){s?e.setPropertyNS(t,n,r):(D.dynamicAttributesRemoveDashes===!0&&(n=removeDashes(n)),e.addDynamicAttribute(i?i+":"+n:n,r))});else if(D.nodeClass){var $=t(D.nodeClass);n(e,$.prototype),$.call(e),e.setNodeClass($),H(function(t,n,r){e.setPropertyNS(t,n,r)})}}else _&&y.isTaglib(_)&&e.addError("Tag "+e.toString()+' is not allowed for taglib "'+_+'"')},findNestedAttrs:function(e,t,n){e.forEachChild(function(e){e.uri===r&&e.localName==="attr"&&this.handleAttr(e,t,n)},this)},handleAttr:function(e,n,r){var i=e.parentNode;if(!i.isElementNode()){e.addError(this.toString()+" tag is not nested within an element tag.");return}var s=e.hasAttribute("value"),o=e.getAttribute("name"),u=e.getAttribute("value"),a=e.getAttribute("uri")||"",f=e.getAttribute("prefix")||"";if(i.hasAttributeNS(a,o)){e.addError(e.toString()+' tag adds duplicate attribute with name "'+o+'"'+(a?' and URI "'+a+'"':""));return}e.removeAttribute("name"),e.removeAttribute("value"),e.removeAttribute("uri"),e.removeAttribute("prefix");if(e.hasAttributesAnyNS()){var l=e.getAllAttributes().map(function(e){return e.qName});e.addError("Invalid attributes for tag "+e.toString()+": "+l.join(", "));return}e.previousSibling&&e.previousSibling.isTextNode()&&e.previousSibling.getText().trim()===""&&e.previousSibling.detach(),e.nextSibling&&e.nextSibling.isTextNode()&&e.nextSibling.getText().trim()===""&&e.nextSibling.detach(),e.nextSibling&&e.nextSibling.isTextNode()&&e.nextSibling.setText(e.nextSibling.getText().replace(/^\n\s*/,"")),e.detach(),n.transformTree(e,r),s?i.setAttributeNS(a,o,u,f):(e.setEscapeXmlContext(t("raptor/templating/compiler/EscapeXmlContext").Attribute),i.setAttributeNS(a,o,e.getBodyContentExpression(r),f,!1))}}});
define.Class("raptor/templating/taglibs/core/ElseTagTransformer",["raptor"],function(e,t){"use strict";var n=t("raptor/strings");return{process:function(e,t){var r=e.previousSibling,i,s=t.getNodeClass("http://raptorjs.org/templates/core","if"),o=t.getNodeClass("http://raptorjs.org/templates/core","else-if"),u=[];while(r){if(r.getNodeClass()===o||r.getNodeClass()===s){i=r;break}if(!r.isTextNode()){e.addError(r+" is not allowed before "+e.toString()+" tag.");return}if(!n.isEmpty(r.getText())){e.addError('Static text "'+n.trim(r.getText())+'" is not allowed before '+e.toString()+" tag.");return}u.push(r),r=r.previousSibling}if(!i){e.addError("<c:if> or <c:else-if> node not found immediately before "+e.toString()+" tag.");return}u.forEach(function(e){e.parentNode.removeChild(e)}),i.hasElse=!0,e.valid=!0}}});
define.Class("raptor/templating/taglibs/core/CoreTextTransformer",["raptor"],function(e,t){"use strict";var n=t("raptor/templating/compiler/ExpressionParser"),r=t("raptor/templating/compiler/TextNode"),i=t("raptor/templating/taglibs/core/WriteNode"),s=t("raptor/templating/taglibs/core/ScriptletNode");return{process:function(e,t){if(e.parentNode&&e.parentNode.parseBodyText===!1)return;var o=[];n.parse(e.text,{text:function(e,t){o.push({text:e,escapeXml:t})},expression:function(e,t){o.push({expression:e,escapeXml:t})},scriptlet:function(e){o.push({scriptlet:e})},error:function(t){e.addError(t)}},this);if(o.length>0){var u=0;o[0].text?(e.setText(o[0].text),e.setEscapeXml(o[0].escapeXml!==!1),u=1):(e.text="",u=0);var a=[];for(var f=u,l,c;f<o.length;f++)l=o[f],c=null,l.hasOwnProperty("text")?(c=new r(l.text,l.escapeXml!==!1),c.setTransformerApplied(this)):l.hasOwnProperty("expression")?c=new i({expression:l.expression,escapeXml:l.escapeXml!==!1}):l.hasOwnProperty("scriptlet")&&(c=new s(l.scriptlet)),c&&(c.setPosition(e.getPosition()),a.push(c));a.length&&e.parentNode.insertAfter(a,e)}}}});
define.Class("raptor/templating/taglibs/core/ForNode","raptor/templating/compiler/Node",["raptor"],function(e,t){"use strict";var n=/^\s*([A-Za-z_][A-Za-z0-9_]*)\s+in\s+(.+)$/,r=/^\(\s*([A-Za-z_][A-Za-z0-9_]*)\s*,\s*([A-Za-z_][A-Za-z0-9_]*)\s*\)\s+in\s+(.+)$/,i=t("raptor/json/stringify").stringify,s=function(e){var t=e.match(n);if(t)return{"var":t[1],"in":t[2]};t=e.match(r);if(!t)throw new Error('Invalid each attribute of "'+e+'"');return{nameVar:t[1],valueVar:t[2],"in":t[3]}},o=function(e){o.superclass.constructor.call(this),e&&this.setProperties(e)};return o.prototype={doGenerateCode:function(e){var t=this.getProperty("each"),n=!1,r=this.getProperty("separator"),o=this.getProperty("statusVar")||this.getProperty("varStatus");if(!t){this.addError('"each" attribute is required'),this.generateCodeForChildren(e);return}var u;try{u=s(t)}catch(a){this.addError(a.message),this.generateCodeForChildren(e);return}var f=e.makeExpression(u["in"]),l=u["var"],c=u.nameVar,h=u.valueVar;if(c){if(r){this.addError("Separator is not supported when looping over properties"),this.generateCodeForChildren(e);return}if(o){this.addError("Loop status variable not supported when looping over properties"),this.generateCodeForChildren(e);return}}r&&!o&&(o="__loop");var p,d;o?(d=[l,o],p=e.getStaticHelperFunction("forEachWithStatusVar","fv"),e.statement(p+"("+f+", function("+d.join(",")+") {").indent(function(){this.generateCodeForChildren(e),r&&e.statement("if (!"+o+".isLast()) {").indent(function(){e.write(e.isExpression(r)?r.getExpression():i(r))},this).line("}")},this).line("});")):this.getProperty("forLoop")===!0?(d=["__array","__index","__length",l],e.statement(e.getStaticHelperFunction("forLoop","fl")+"("+f+", function("+d.join(",")+") {").indent(function(){e.statement("for (;__index<__length;__index++) {").indent(function(){e.statement(l+"=__array[__index];"),this.generateCodeForChildren(e)},this).line("}"),this.generateCodeForChildren(e)},this).line("});")):(d=c?[c,h]:[l],p=c?e.getStaticHelperFunction("forEachProp","fp"):e.getStaticHelperFunction("forEach","f"),e.statement(p+"("+f+", function("+d.join(",")+") {").indent(function(){this.generateCodeForChildren(e)},this).line("});"))}},o});
define.Class("raptor/templating/taglibs/core/IfNode","raptor/templating/compiler/Node",["raptor"],function(e,t){"use strict";var n=function(e){n.superclass.constructor.call(this),e&&this.setProperties(e)};return n.prototype={doGenerateCode:function(e){var t=this.getProperty("test");t||this.addError('"test" attribute is required'),e.statement("if ("+t+") {").indent(function(){this.generateCodeForChildren(e)},this).line("}")}},n});
define.Class("raptor/templating/taglibs/core/ElseIfNode","raptor/templating/compiler/ElementNode",["raptor"],function(e,t){"use strict";var n=function(e){n.superclass.constructor.call(this,"http://raptorjs.org/templates/core","else-if","c"),e&&this.setProperties(e)};return n.prototype={doGenerateCode:function(e){var t=this.getProperty("test");if(!t){this.addError('"test" attribute is required');return}e.line("else if ("+t+") {").indent(function(){this.generateCodeForChildren(e)},this).line("}")}},n});
define.Class("raptor/templating/taglibs/core/ElseNode","raptor/templating/compiler/ElementNode",["raptor"],function(e,t){"use strict";var n=t("raptor/strings"),r=function(e){r.superclass.constructor.call(this,"else","http://raptorjs.org/templates/core","c"),e&&this.setProperties(e)};return r.prototype={doGenerateCode:function(e){if(this.valid==null)return;e.line("else {").indent(function(){this.generateCodeForChildren(e)},this).line("}")}},r});
define.Class("raptor/templating/taglibs/core/TagHandlerNode","raptor/templating/compiler/Node",["raptor"],function(e,t){"use strict";var n=e.extend,r=t("raptor/objects"),i=e.forEach,s=e.forEachEntry,o=t("raptor/json/stringify"),u=t("raptor/templating/compiler/Expression"),a=function(e,t){var n=e._handlerVars||(e._handlerVars={}),r=n[t];return r||(n[t]=r=t.replace(/[.\-\/]/g,"_"),e.addStaticVar(r,e.getStaticHelperFunction("getTagHandler","t")+"("+o(t)+")")),r},f=function(e,t){var n=[];return e?(s(e,function(e,r){if(r instanceof u){var i;t.indent(function(){i=r.expression.toString()}),n.push(t.indentStr(1)+o(e)+": "+i)}else typeof r=="string"||typeof r=="object"?n.push(t.indentStr(1)+o(e)+": "+o(r)):n.push(t.indentStr(1)+o(e)+": "+r)}),n.length?"{\n"+n.join(",\n")+"\n"+t.indentStr()+"}":"{}"):"{}"},l=function(e){this.nodeType||l.superclass.constructor.call(this),this.tag=e,this.dynamicAttributes=null,this.preInvokeCode=[],this.postInvokeCode=[],this.inputExpression=null};return l.convertNode=function(e,t){n(e,l.prototype),l.call(e,t)},l.prototype={addDynamicAttribute:function(e,t){this.dynamicAttributes||(this.dynamicAttributes={}),this.dynamicAttributes[e]=t},addPreInvokeCode:function(e){this.preInvokeCode.push(e)},addPostInvokeCode:function(e){this.postInvokeCode.push(e)},setInputExpression:function(e){this.inputExpression=e},doGenerateCode:function(t){var n=a(t,this.tag.handlerClass);this.tag.forEachImportedVariable(function(e){this.setProperty(e.targetProperty,new u(e.expression))},this);var o=e.extend({},this.getPropertiesByNS());delete o[""];var l=!r.isEmpty(o),c=this,h=[];c.tag.forEachVariable(function(e){var t;if(e.nameFromAttribute){var n=e.nameFromAttribute.split(/\s+or\s+|\s*,\s*/i);for(var r=0,i=n.length;r<i;r++){var s=n[r],o=!1;s.endsWith("|keep")&&(o=!0,s=s.slice(0,0-"|keep".length),n[r]=s),t=this.getAttribute(s);if(t){o||this.removeProperty(s);break}}t||(this.addError("Attribute "+n.join(" or ")+" is required"),t="_var")}else t=e.name,t||(this.addError("Variable name is required"),t="_var");h.push(t)},this),c.preInvokeCode.length&&c.preInvokeCode.forEach(function(e){t.indent().code(e).code("\n")}),t.contextMethodCall("t",function(){t.code("\n").indent(function(){t.line(n+",").indent(),c.inputExpression?t.code(c.inputExpression):t.code(f(c.getProperties(),t));if(c.hasChildren()){var e=[];i(h,function(t){e.push(t)}),t.code(",\n").line("function("+e.join(",")+") {").indent(function(){c.generateCodeForChildren(t)}).indent().code("}")}else(l||c.dynamicAttributes)&&t.code(",\n").indent().code("null");c.dynamicAttributes?t.code(",\n").indent().code(f(c.dynamicAttributes,t)):l&&t.code(",\n").indent().code("null"),l&&t.code(",\n").line("{").indent(function(){var e=!0;s(o,function(n,r){e||t.code(",\n"),t.code(t.indentStr()+'"'+n+'": '+f(r,t)),e=!1})}).indent().code("}")})}),c.postInvokeCode.length&&c.postInvokeCode.forEach(function(e){t.indent().code(e).code("\n")})}},l});
define.Class("raptor/templating/taglibs/core/TemplateNode","raptor/templating/compiler/Node",["raptor"],function(e,t){"use strict";var n=e.forEach,r=function(e){r.superclass.constructor.call(this),e&&this.setProperties(e)};return r.prototype={doGenerateCode:function(e){var t=this.getProperty("name"),r=this.getProperty("params");r?(r=r.split(/(?:\s*,\s*)|(?:\s+)/g),n(r,function(t){t=t.trim(),t.length&&e.addVar(t,"data."+t)},this)):r=null,this.forEachProperty(function(t,r,i){t||(t=this.uri);if(r==="functions"||r==="importFunctions"||r==="importHelperFunctions")n(i.split(/\s*[,;]\s*/g),function(n){var r=e.compiler.taglibs.getFunction(t,n);r?e.addHelperFunction(r.functionClass,n,r.bindToContext===!0):this.addError('Function with name "'+n+'" not found in taglib "'+t+'"')},this);else if(r==="importHelperObject"){var s=i;if(!e.compiler.taglibs.isTaglib(t))this.addError('Helper object not found for taglib "'+t+'". Taglib with URI "'+t+'" not found.');else{var o=e.compiler.taglibs.getHelperObject(t);o?o.className?e.addVar(s,"context.o("+JSON.stringify(o.className)+")"):o.moduleName&&e.addStaticVar(s,"require("+JSON.stringify(o.moduleName)+")"):this.addError('Helper object not found for taglib "'+t+'"')}}},this),t?e.setTemplateName(t):e.getTemplateName()||this.addError('The "name" attribute is required for the '+this.toString()+" tag or it must be passed in as a compiler option."),this.generateCodeForChildren(e)}},r});
define.Class("raptor/templating/taglibs/core/WriteNode","raptor/templating/compiler/Node",["raptor"],function(e,t){"use strict";var n=t("raptor/xml/utils").escapeXmlAttr,r=t("raptor/templating/compiler/EscapeXmlContext"),i=function(e){i.superclass.constructor.call(this,"write"),e&&this.setProperties(e)};return i.prototype={doGenerateCode:function(e){var t=this.getExpression(),n;this.hasProperty("escapeXml")?n=this.getProperty("escapeXml")!==!1:n=this.getProperty("escape-xml")!==!1,n===!0&&(this.getEscapeXmlContext()===r.Attribute?t=e.getStaticHelperFunction("escapeXmlAttr","xa")+"("+t+")":t=e.getStaticHelperFunction("escapeXml","x")+"("+t+")"),t&&e.write(t)},getExpression:function(){return this.getProperty("expression")||this.getProperty("value")||this.getAttribute("expression")||this.getAttribute("value")},toString:function(){return'<c:write expression="'+this.getExpression()+'">'}},i});
define.Class("raptor/templating/taglibs/core/InvokeNode","raptor/templating/compiler/Node",["raptor"],function(e,t){"use strict";var n=e.forEach,r=function(e){r.superclass.constructor.call(this),e&&this.setProperties(e)};return r.prototype={doGenerateCode:function(e){var t=this.getProperty("function"),r,i,s=e.getAttribute("core:definedFunctions");if(!t){this.addError('"function" attribute is required');return}if(t.indexOf("(")===-1){r=s?s[t]:null;var o=[],u={},a=[];r&&(a=r.params||[],i=r.bodyParam,n(a,function(e){u[e]=!0},this));var f=null;this.hasChildren()&&(!r||!r.bodyParam?this.addError('Nested content provided when invoking macro "'+t+'" but defined macro does not support nested content.'):f=this.getBodyContentExpression(e,!1)),this.forEachPropertyNS("",function(e,n){if(e==="function")return;u[e]||this.addError('Parameter with name "'+e+'" not supported for function with name "'+t+'". Allowed parameters: '+a.join(", "))},this),n(a,function(e){u[e]=!0;if(e===i)o.push(f?f:"undefined");else{var t=this.getAttribute(e);t==null?o.push("undefined"):o.push(this.getProperty(e))}},this),e.write(t+"("+o.join(",")+")")}else{var l=t.substring(0,t.indexOf("("));r=s?s[l]:null,r?e.write(t):e.statement(t+";\n")}}},r});
define.Class("raptor/templating/taglibs/core/ScriptletNode","raptor/templating/compiler/Node",["raptor"],function(e,t){"use strict";var n=function(e){n.superclass.constructor.call(this,"scriptlet"),this.code=e};return n.prototype={doGenerateCode:function(e){this.code&&e.code(this.code)},toString:function(){return"{%"+this.code+"%}"}},n});
define.Class("raptor/templating/taglibs/core/ChooseNode","raptor/templating/compiler/Node",["raptor"],function(e,t){"use strict";var n=t("raptor/strings"),r=t("raptor/templating/taglibs/core/WhenNode"),i=t("raptor/templating/taglibs/core/OtherwiseNode"),s=function(e){s.superclass.constructor.call(this)};return s.prototype={doGenerateCode:function(e){var t=null,s=!1,o=[];this.forEachChild(function(u){if(u.isTextNode())n.isEmpty(u.getText())||this.addError('Static text "'+n.trim(u.getText())+'" is not allowed in '+this.toString()+" tag.");else if(u.getNodeClass()===r){if(t){this.addError(t+" tag must be last child of tag "+this+".");return}s||(s=!0,u.firstWhen=!0),o.push(u)}else if(u.getNodeClass()===i){if(t){this.addError("More than one "+t+" tag is not allowed as child of tag "+this+".");return}t=u,o.push(t)}else this.addError(u+" tag is not allowed as child of tag "+this+"."),u.generateCode(e)},this),o.forEach(function(t,n){t.hasElse=n<o.length-1,t.generateCode(e)}),s||this.addError(""+t+" tag is required to have at least one sibling <c:when> tag.")}},s});
define.Class("raptor/templating/taglibs/core/DefNode","raptor/templating/compiler/Node",["raptor"],function(e,t){"use strict";var n=t("raptor/strings"),r=/^([A-Za-z_][A-Za-z0-9_]*)\(((?:[A-Za-z_][A-Za-z0-9_]*,\s*)*[A-Za-z_][A-Za-z0-9_]*)?\)$/,i=function(e){i.superclass.constructor.call(this),e&&this.setProperties(e)};return i.prototype={doGenerateCode:function(e){var t=this.getProperty("function");if(!t){this.addError('"function" attribute is required'),this.generateCodeForChildren(e);return}t=n.trim(t);var i=r.exec(t);if(!i){this.addError('Invalid function name of "'+t+'"'),this.generateCodeForChildren(e);return}var s=i[1],o=i[2]?i[2].split(/\s*,\s*/):[],u=e.getAttribute("core:definedFunctions");u||(u=e.setAttribute("core:definedFunctions",{})),u[s]={params:o,bodyParam:this.getProperty("bodyParam")},e.statement("function "+t+" {").indent(function(){e.line("return context.c(function() {").indent(function(){this.generateCodeForChildren(e)},this).line("});")},this).line("}")}},i});
define.Class("raptor/templating/taglibs/core/IncludeNode","raptor/templating/compiler/Node",["raptor"],function(e,t){"use strict";var n=t("raptor/json/stringify"),r=e.extend,i=function(e){i.superclass.constructor.call(this),e&&this.setProperties(e)};return i.convertNode=function(e,t){r(e,i.prototype),i.call(e),e.setProperty("template",n(t))},i.prototype={doGenerateCode:function(e){var r=this.getProperty("template"),i=this.getProperty("templateData")||this.getProperty("template-data"),s,o=this;if(r){this.removeProperty("template");var u;i?u=i:u={toString:function(){var t=[];return o.forEachPropertyNS("",function(e,r){e=e.replace(/-([a-z])/g,function(e,t){return t.toUpperCase()}),t.push(n(e)+": "+r)},o),o.hasChildren()&&t.push(n("invokeBody")+": "+o.getBodyContentFunctionExpression(e,!1)),"{"+t.join(", ")+"}"}},e.include(r,u)}else if(s=this.getAttribute("resource")){var a=this.getProperty("static")!==!1;if(a){var f=t("raptor/resources").findResource(s);if(!f.exists()){this.addError('"each" attribute is required');return}e.write(n(f.readAsString()))}}else this.addError('"template" or "resource" attribute is required')}},i});
define.Class("raptor/templating/taglibs/core/OtherwiseNode","raptor/templating/compiler/Node",["raptor"],function(e,t){"use strict";var n=t("raptor/strings"),r=function(e){r.superclass.constructor.call(this),e&&this.setProperties(e)};return r.prototype={doGenerateCode:function(e){e.line("else {").indent(function(){this.generateCodeForChildren(e)},this).line("}")},toString:function(){return"<c:otherwise>"}},r});
define.Class("raptor/templating/taglibs/core/VarNode","raptor/templating/compiler/Node",["raptor"],function(e,t){"use strict";var n=/^[A-Za-z_][A-Za-z0-9_]*$/,r=function(e){r.superclass.constructor.call(this),e&&this.setProperties(e)};return r.prototype={doGenerateCode:function(e){var t=this.getProperty("name"),r=this.getProperty("value")||this.getProperty("string-value");t?n.test(t)||(this.addError('Invalid variable name of "'+t+'"'),t=null):this.addError('"name" attribute is required'),t&&e.statement("var "+t+(r?"="+r:"")+";")}},r});
define.Class("raptor/templating/taglibs/core/WhenNode","raptor/templating/compiler/Node",["raptor"],function(e,t){"use strict";var n=function(e){n.superclass.constructor.call(this),e&&this.setProperties(e)};return n.prototype={doGenerateCode:function(e){var t=this.getProperty("test");t||this.addError('"test" attribute is required for '+this.toString()+" tag.");var n="if ("+t+")";this.firstWhen?e.statement(n+" {"):e.line("else "+n+" {"),e.indent(function(){this.generateCodeForChildren(e)},this).line("}")}},n});
define.Class("raptor/templating/taglibs/core/WithNode","raptor/templating/compiler/Node",["raptor"],function(e,t){"use strict";var n=t("raptor/templating/compiler/AttributeSplitter"),r=/^[A-Za-z_][A-Za-z0-9_]*$/,i=function(e){i.superclass.constructor.call(this),e&&this.setProperties(e)};return i.prototype={doGenerateCode:function(t){var i=this.getProperty("vars"),s=this;i||this.addError('"vars" attribute is required');var o=n.parse(i,{"*":{type:"expression"}},{ordered:!0,errorHandler:function(e){s.addError('Invalid variable declarations of "'+i+'". Error: '+e)}}),u=[];e.forEach(o,function(e,n){r.test(e.name)||this.addError('Invalid variable name of "'+e.name+'" in "'+i+'"'),u.push((n>0?t.indentStr(1)+"    ":"")+e.name+(e.value?"="+e.value:"")+(n<o.length-1?",\n":";"))},this),t.statement("(function() {").indent(function(){t.statement("var "+u.join("")),this.generateCodeForChildren(t)},this).line("}());")}},i});
$rset("resource","/raptor/templating/taglibs/core/core.rtld",'<raptor-taglib>\n    \n    \n    <tlib-version>1.0</tlib-version>\n    \n    <uri>http://raptorjs.org/templates/core</uri>\n    <short-name>core</short-name>\n    <prefix>c</prefix>\n    \n    <tag id="template">\n        \n        <name>template</name> \n        \n        <attribute>\n            <name>name</name>\n            <allow-expressions>false</allow-expressions>\n        </attribute>\n        \n        <attribute>\n            <name>params</name>\n            <allow-expressions>false</allow-expressions>\n        </attribute>\n        \n        <attribute>\n            <name>imports</name>\n            <allow-expressions>false</allow-expressions>\n        </attribute>\n        \n        <attribute>\n            <uri>*</uri>\n            <name>functions</name>\n            <allow-expressions>false</allow-expressions>\n        </attribute>\n\n        <attribute>\n            <uri>*</uri>\n            <name>import-functions</name>\n            <allow-expressions>false</allow-expressions>\n        </attribute>\n\n        <attribute>\n            <uri>*</uri>\n            <name>import-helper-object</name>\n            <allow-expressions>false</allow-expressions>\n        </attribute>\n\n        <node-class>raptor/templating/taglibs/core/TemplateNode</node-class>\n    </tag>\n    \n    <tag extends="template">\n    \n        <uri></uri>\n        <name>template</name>\n        \n    </tag>\n    \n    <tag>\n        \n        <name>*</name> \n        <uri>*</uri> <!-- Register attributes supported by all tags in all namespaces -->\n        \n        <attribute uri="core">\n            <name>space</name>\n            <type>custom</type>\n            <allow-expressions>false</allow-expressions>\n        </attribute>\n        \n        <attribute uri="core">\n            <name>whitespace</name>\n            <type>custom</type>\n            <allow-expressions>false</allow-expressions>\n        </attribute>\n        \n        <attribute uri="core">\n            <name>for</name>\n            <allow-expressions>false</allow-expressions>\n        </attribute>\n\n        <attribute uri="core">\n            <name>for-each</name>\n            <allow-expressions>false</allow-expressions>\n        </attribute>\n\n        <attribute uri="core">\n            <name>if</name>\n            <type>expression</type>\n        </attribute>\n        \n        <attribute uri="core">\n            <name>else</name>\n            <type>empty</type>\n        </attribute>\n        \n        <attribute uri="core">\n            <name>else-if</name>\n            <type>expression</type>\n        </attribute>\n        \n        <attribute uri="core">\n            <name>attrs</name>\n            <type>expression</type>\n        </attribute>\n        \n        <attribute uri="core">\n            <name>when</name>\n            <type>expression</type>\n        </attribute>\n        \n        <attribute uri="core">\n            <name>with</name>\n            <type>custom</type>\n        </attribute>\n        \n        <attribute uri="core">\n            <name>otherwise</name>\n            <type>empty</type>\n        </attribute>\n        \n        <attribute uri="core">\n            <name>parse-body-text</name>\n            <type>boolean</type>\n            <allow-expressions>false</allow-expressions>\n        </attribute>\n\n        <attribute uri="core">\n            <name>trim-body-indent</name>\n            <type>boolean</type>\n            <allow-expressions>false</allow-expressions>\n        </attribute>\n        \n        <attribute uri="core">\n            <name>strip</name>\n            <type>boolean</type>\n            <allow-expressions>false</allow-expressions>\n        </attribute>\n        \n        <attribute uri="core">\n            <name>bodyContent</name>\n            <type>expression</type>\n            <deprecated>Use "content" attribute instead. This will be removed in the future.</deprecated>\n        </attribute>\n        \n        <attribute uri="core">\n            <name>content</name>\n            <type>expression</type>\n        </attribute>\n        \n        <attribute uri="core">\n            <name>replace</name>\n            <type>expression</type>\n        </attribute>\n\n        <attribute uri="core">\n            <name>input</name>\n            <type>expression</type>\n        </attribute>\n        \n        <!-- Compiler that applies to all tags as well -->\n        <transformer>\n            <class-name>raptor/templating/taglibs/core/CoreTagTransformer</class-name>\n        </transformer>\n    </tag>\n    \n    \n    \n    <tag>\n        \n        <name>for</name> \n\n        <node-class>raptor/templating/taglibs/core/ForNode</node-class>\n        \n        <attribute>\n            <name>each</name>\n            <required>false</required>\n            <allow-expressions>false</allow-expressions>\n        </attribute>\n        \n        <attribute>\n            <name>separator</name>\n            <type>string</type>\n        </attribute>\n        \n        <attribute>\n            <name>status-var</name>\n            <type>identifier</type>\n            <allow-expressions>false</allow-expressions>\n        </attribute>\n        \n        <attribute>\n            <name>varStatus</name>\n            <type>identifier</type>\n            <allow-expressions>false</allow-expressions>\n            <deprecated>Use status-var instead. This will be removed in the future.</deprecated>\n        </attribute>\n        \n        <attribute>\n            <name>for-loop</name>\n            <type>boolean</type>\n            <allow-expressions>false</allow-expressions>\n        </attribute>\n    </tag>\n    \n    <tag>\n        \n        <name>write</name> \n\n        <node-class>raptor/templating/taglibs/core/WriteNode</node-class>\n        \n        <attribute>\n            <name>value</name>\n            <required>true</required>\n            <type>expression</type>\n        </attribute>\n        \n        <attribute>\n            <name>escapeXml</name>\n            <type>boolean</type>\n            <allow-expressions>false</allow-expressions>\n            <deprecated>Use escape-xml instead. This will be removed in the future.</deprecated>\n        </attribute>\n        \n        <attribute>\n            <name>escape-xml</name>\n            <type>boolean</type>\n            <allow-expressions>false</allow-expressions>\n        </attribute>\n        \n    </tag>\n    \n    <tag>\n        \n        <name>if</name> \n\n        <node-class>raptor/templating/taglibs/core/IfNode</node-class>\n\n        <attribute>\n            <name>test</name>\n            <type>expression</type>\n        </attribute>\n\n    </tag>\n    \n    <tag>\n        <name>else</name> \n        <node-class>raptor/templating/taglibs/core/ElseNode</node-class>\n        \n        <transformer>\n            <class-name>raptor/templating/taglibs/core/ElseTagTransformer</class-name>\n            <after>raptor/templating/taglibs/core/CoreTagTransformer</after>\n            <properties>\n                <type>else</type>\n            </properties>\n        </transformer>\n    </tag>\n    \n    <tag>\n        <name>else-if</name>\n        <attribute name="test" type="expression"/>\n         \n        <node-class>raptor/templating/taglibs/core/ElseIfNode</node-class>\n        \n        <transformer>\n            <class-name>raptor/templating/taglibs/core/ElseTagTransformer</class-name>\n            <after>raptor/templating/taglibs/core/CoreTagTransformer</after>\n            <properties>\n                <type>else-if</type>\n            </properties>\n        </transformer>\n    </tag>\n    \n    <tag>\n        \n        <name>invoke</name> \n\n        <node-class>raptor/templating/taglibs/core/InvokeNode</node-class>\n\n        <attribute>\n            <name>function</name>\n            <type>custom</type>\n            <allow-expressions>false</allow-expressions>\n            <required>true</required>\n        </attribute>\n\n        <attribute>\n            <name>*</name>\n            <uri></uri>\n            <type>string</type>\n            <allow-expressions>true</allow-expressions>\n        </attribute>\n    </tag>\n    \n    <tag>\n        \n        <name>choose</name> \n\n        <node-class>raptor/templating/taglibs/core/ChooseNode</node-class>\n\n    </tag>\n\n    <tag>\n        \n        <name>when</name> \n\n        <node-class>raptor/templating/taglibs/core/WhenNode</node-class>\n\n        <attribute>\n            <name>test</name>\n            <type>expression</type>\n        </attribute>\n        \n    </tag>\n    \n    <tag>\n        \n        <name>otherwise</name> \n\n        <node-class>raptor/templating/taglibs/core/OtherwiseNode</node-class>\n\n    </tag>\n        \n    <tag>\n        \n        <name>def</name> \n\n        <node-class>raptor/templating/taglibs/core/DefNode</node-class>\n\n        <attribute>\n            <name>function</name>\n            <type>custom</type>\n            <allow-expressions>false</allow-expressions>\n        </attribute>\n\n        <attribute>\n            <name>body-param</name>\n            <type>custom</type>\n            <allow-expressions>false</allow-expressions>\n        </attribute>\n        \n    </tag>\n    \n    <tag>\n        \n        <name>with</name> \n\n        <node-class>raptor/templating/taglibs/core/WithNode</node-class>\n\n        <attribute>\n            <name>vars</name>\n            <type>custom</type>\n            <allow-expressions>false</allow-expressions>\n        </attribute>\n        \n    </tag>\n    \n    <tag>\n        \n        <name>include</name> \n\n        <node-class>raptor/templating/taglibs/core/IncludeNode</node-class>\n\n        <attribute>\n            <name>template</name>\n            <type>string</type>\n        </attribute>\n        \n        <attribute>\n            <name>templateData</name>\n            <type>expression</type>\n            <deprecated>Use template-data instead. This will be removed in the future.</deprecated>\n        </attribute>\n        \n        <attribute>\n            <name>template-data</name>\n            <type>expression</type>\n        </attribute>\n        \n        <attribute>\n            <name>resource</name>\n            <type>string</type>\n        </attribute>\n        \n        <attribute>\n            <name>static</name>\n            <type>boolean</type>\n            <allow-expressions>false</allow-expressions>\n        </attribute>\n        \n        <dynamic-attributes>true</dynamic-attributes>\n        \n    </tag>\n    \n    <tag>\n        \n        <name>attr</name> \n\n        <attribute>\n            <name>name</name>\n            <type>string</type>\n        </attribute>\n        \n        <attribute>\n            <name>value</name>\n            <type>string</type>\n        </attribute>\n        \n        <attribute>\n            <name>uri</name>\n            <type>string</type>\n        </attribute>\n\n        <attribute>\n            <name>prefix</name>\n            <type>string</type>\n        </attribute>\n    </tag>\n    \n    <tag>\n        \n        <name>var</name> \n\n        <node-class>raptor/templating/taglibs/core/VarNode</node-class>\n\n        <attribute>\n            <name>name</name>\n            <type>custom</type>\n            <allow-expressions>false</allow-expressions>\n        </attribute>\n        \n        <attribute>\n            <name>value</name>\n            <type>expression</type>\n        </attribute>\n\n        <attribute>\n            <name>string-value</name>\n            <type>string</type>\n        </attribute>\n\n        <attribute>\n            <name>boolean-value</name>\n            <type>boolean</type>\n        </attribute>\n\n        <attribute>\n            <name>number-value</name>\n            <type>number</type>\n        </attribute>\n    </tag>\n    \n    <tag>\n        \n        <name>assign</name> \n\n        <node-class>raptor/templating/taglibs/core/AssignNode</node-class>\n\n        <attribute>\n            <name>var</name>\n            <type>custom</type>\n            <allow-expressions>false</allow-expressions>\n        </attribute>\n        \n        <attribute>\n            <name>value</name>\n            <type>expression</type>\n        </attribute>\n    </tag>\n    \n    <text-transformer>\n        <class-name>raptor/templating/taglibs/core/CoreTextTransformer</class-name>\n    </text-transformer>\n    \n</raptor-taglib>'),$radd("rtld","/raptor/templating/taglibs/core/core.rtld");
define.Class("raptor/templating/taglibs/html/HtmlTagTransformer",["raptor"],function(e,t){"use strict";var n=t("raptor/templating/taglibs/html/DocTypeNode");return{process:function(e,t){if(e.isElementNode()){var r=t.options||{},i=r.preserveWhitespace||{},s=r.allowSelfClosing||{},o=r.startTagOnly||{},u=e.uri?e.uri+":"+e.localName:e.localName;e.isPreserveWhitespace()==null&&i[u]===!0&&e.setPreserveWhitespace(!0),s[u]===!0&&e.setAllowSelfClosing(!0),t.options.xhtml!==!0&&o[u]===!0&&e.setStartTagOnly(!0);if(e.getQName()==="html"&&e.hasAttributeNS("http://raptorjs.org/templates/html","doctype")){var a=e.getAttributeNS("http://raptorjs.org/templates/html","doctype"),f=new n({value:a,pos:e.getPosition()});e.parentNode.insertBefore(f,e),e.removeAttributeNS("http://raptorjs.org/templates/html","doctype")}}}}});
define.Class("raptor/templating/taglibs/html/DocTypeNode","raptor/templating/compiler/ElementNode",["raptor"],function(e,t){"use strict";var n=t("raptor/templating/compiler/ExpressionParser"),r=function(e){r.superclass.constructor.call(this),e&&this.setProperties(e)};return r.prototype={doGenerateCode:function(e){var t=this.getAttribute("value")||this.getProperty("value");e.text("<!DOCTYPE "),n.parse(t,{text:function(t,n){e.text(t)},expression:function(t){e.write(t)},error:function(e){this.addError('Invalid doctype: "'+t+'". '+e)}},this),e.text(">")}},r});
$rset("resource","/raptor/templating/taglibs/html/html.rtld",'<raptor-taglib>\n    \n    \n    <tlib-version>1.0</tlib-version>\n    <short-name>html</short-name>\n    <uri>http://raptorjs.org/templates/html</uri>\n\n    <tag>\n        \n        <name>pre</name> \n        <uri></uri> <!-- Register attributes supported by all tags in all namespaces -->\n        \n        <!-- Compiler that applies to all tags as well -->\n        <transformer>\n            <class-name>raptor/templating/taglibs/html/HtmlTagTransformer</class-name>\n        </transformer>\n    </tag>\n    \n    <tag>\n        \n        <name>html</name> \n        <uri></uri> <!-- Register attributes supported by all tags in all namespaces -->\n        \n        <attribute name="doctype" type="string"/>\n        \n        <!-- Compiler that applies to all tags as well -->\n        <transformer>\n            <class-name>raptor/templating/taglibs/html/HtmlTagTransformer</class-name>\n        </transformer>\n    </tag>\n\n    <tag>\n        <name>doctype</name>\n        <attribute name="value" type="custom"/>\n        <node-class>raptor/templating/taglibs/html/DocTypeNode</node-class>\n    </tag>\n    \n    <tag>\n        \n        <name>*</name> \n        <uri>*</uri> <!-- Register attributes supported by all tags in all namespaces -->\n        \n        <!-- Compiler that applies to all tags as well -->\n        <transformer>\n            <class-name>raptor/templating/taglibs/html/HtmlTagTransformer</class-name>\n        </transformer>\n    </tag>\n\n    <tag>\n        <name>comment</name>\n        <handler-class>raptor/templating/taglibs/html/CommentTag</handler-class>\n    </tag>\n    \n</raptor-taglib>'),$radd("rtld","/raptor/templating/taglibs/html/html.rtld");
define.Class("raptor/templating/taglibs/widgets/WidgetTag",["raptor"],function(e,t){"use strict";var n=t("raptor/widgets"),r={elId:function(){}};return{render:function(t,i){var s=t.jsClass,o=t.config||t._cfg,u=i.attributes.widgetArgs,a=t.elId,f=t.scope,l=t.assignedId,c;u&&(delete i.attributes.widgetArgs,f=f||u.scope,l=l||u.id,c=u.events);if(!a&&t.hasOwnProperty("elId"))throw e.createError('Invalid widget ID for "'+s+'"');var h=n.getWidgetsContext(i);s?h.beginWidget({type:s,id:a,assignedId:l,config:o,scope:f,events:c,createWidget:t.createWidget},function(e){t.invokeBody(e)}):t.invokeBody(r)}}});
define("raptor/templating/taglibs/widgets/WidgetFunctions",function(e){"use strict";var t=e("raptor/widgets");return{widgetArgs:function(e,t,n){this.attributes.widgetArgs={id:e,scope:t,events:n}},cleanupWidgetArgs:function(){delete this.attributes.widgetArgs}}});
define.Class("raptor/templating/taglibs/widgets/WidgetsTagTransformer",["raptor"],function(e,t){"use strict";var n="http://raptorjs.org/templates/widgets",r=t("raptor/strings"),i=t("raptor/objects"),s=t("raptor/json/stringify"),o=t("raptor/templating/compiler/AttributeSplitter");return{process:function(t,u,a){var f=t.getAttributeNS(n,"widget"),l,c=f?null:t.getPropertiesNS(n),h={},p=[];if(c){var d=[];e.forEachEntry(c,function(e,n){if(e==="id")d.push(e),h.scope="widget",h.id=n;else if(r.startsWith(e,"event-")){d.push(e);var i=o.parse(n,{"*":{type:"expression"},target:{type:"custom"}},{defaultName:"target",errorHandler:function(r){t.addError('Invalid value of "'+n+'" for event attribute "'+e+'". Error: '+r)}}),s=e.substring("event-".length),u=i.target;if(!u){t.addError('Invalid value of "'+n+'" for event attribute "'+e+'". Target message not provided');return}delete i.target,p.push({sourceEvent:s,targetMessage:u,eventProps:i})}}),d.forEach(function(e){t.removePropertyNS(n,e)}),p.length&&(h.events="["+p.map(function(t){var n;return i.isEmpty(t.eventProps)||(n=[],e.forEachEntry(t.eventProps,function(e,t){n.push(s(e)+": "+t)},this),n="{"+n.join(", ")+"}"),"["+s(t.sourceEvent)+","+s(t.targetMessage)+(n?","+n:"")+"]"}).join(",")+"]");if(!i.isEmpty(h)){a.addHelperFunction("raptor/templating/taglibs/widgets/WidgetFunctions","widgetArgs",!0,"_widgetArgs"),a.addHelperFunction("raptor/templating/taglibs/widgets/WidgetFunctions","cleanupWidgetArgs",!0,"_cleanupWidgetArgs");var v=[];h.id?(v.push(h.id.toString()),v.push("widget")):(v.push("null"),v.push("null")),h.events&&v.push(h.events),t.addPreInvokeCode(a.makeExpression("_widgetArgs("+v.join(", ")+")")),t.addPostInvokeCode(a.makeExpression("_cleanupWidgetArgs();"))}}if(f){t.removeAttributeNS(n,"widget");var m=u.convertType(f,"string",!0),g,y;if(y=t.getAttributeNS(n,"id"))t.removeAttributeNS(n,"id"),y=u.convertType(y,"string",!0);if(g=t.getAttributeNS(n,"config"))t.removeAttributeNS(n,"config"),g=u.convertType(g,"expression",!0);var b=u.createTagHandlerNode(n,"widget");t.parentNode.replaceChild(b,t),b.appendChild(t),b.setProperty("jsClass",m),g&&b.setProperty("config",g),y&&(b.setProperty("assignedId",y),b.setProperty("scope",a.makeExpression("widget")));var w=t.getAttribute("id");w?(w=u.convertType(w,"string",!0),b.setProperty("elId",w)):t.setAttribute("id","${widget.elId()}")}if(l=t.getAttributeNS(n,"el-id"))t.removeAttributeNS(n,"el-id"),t.hasAttribute("id")?t.addError('The "w:el-id" attribute cannot be used in conjuction with the "id" attribute'):t.setAttribute("id",a.makeExpression("widget.elId("+JSON.stringify(l)+")"));t.localName==="widget"&&t.uri===n&&t.getAttribute("id")!=null&&t.setProperty("scope",a.makeExpression("widget"))}}});
$rset("resource","/raptor/templating/taglibs/widgets/widgets.rtld",'<raptor-taglib>\n    \n    \n    <tlib-version>1.0</tlib-version>\n    <short-name>widgets</short-name>\n    <uri>http://raptorjs.org/templates/widgets</uri>\n    \n    <attribute name="id" type="string"/>\n    <attribute pattern="event-*" type="custom" allow-expressions="false" preserve-name="true"/>\n    \n    <tag>\n        \n        <name>*</name> \n        <uri>*</uri> <!-- Register attributes supported by all tags in all namespaces -->\n        \n        <attribute name="widget" type="string" uri="widgets"/>\n        <attribute name="config" type="expression" uri="widgets"/>\n        <attribute name="id" type="string" uri="widgets"/>\n        <attribute name="el-id" type="string" uri="widgets"/>\n        \n        <!-- Compiler that applies to all tags as well -->\n        <transformer>\n            <class-name>raptor/templating/taglibs/widgets/WidgetsTagTransformer</class-name>\n            <after>raptor/templating/taglibs/core/CoreTagTransformer</after>\n        </transformer>\n    </tag>\n    \n    <tag>\n        <name>widget</name>\n        <handler-class>raptor/templating/taglibs/widgets/WidgetTag</handler-class>\n        \n        <attribute name="jsClass" type="string" /> <!-- deprecated -->\n        <attribute name="js-class" type="string"/>\n        <attribute name="config" type="expressions"/>\n        <attribute name="id" type="string" target-property="assignedId"/>\n\n        <variable name="widget"/>\n        \n        <import-variable target-property="_cfg" expression="data.widgetConfig"/>\n    </tag>\n    \n    <tag>\n        <name>init-widgets</name>\n        <handler-class>raptor/templating/taglibs/widgets/InitWidgetsTag</handler-class>\n        \n        <attribute name="function-name" type="string"/>\n        <attribute name="include-script-tag" type="boolean"/>\n        \n    </tag>\n    \n</raptor-taglib>'),$radd("rtld","/raptor/templating/taglibs/widgets/widgets.rtld");
$rset("rhtml","taglibs/test/Button",function(e,t){var n=e.e,r=e.ne,i=e.t,s=i("raptor/templating/taglibs/widgets/WidgetTag"),o=e.x;return function(e,t){var n=e.widget,r=e.buttonAttrs,i=e.label;t.t(s,{jsClass:"taglibs.test.ButtonWidget",_cfg:e.widgetConfig},function(e){t.w("<button").a("id",e.elId()).a(r).w(">").w(o(i)).w("</button>")})}});
define.Class("taglibs.test.Button.ButtonTag",function(e){return{process:function(e,t){var n=e.disabled===!0,r={disabled:n?null:undefined,type:e.type||"button"};e.color&&(r.style="background-color: "+e.color),t.renderTemplate("taglibs/test/Button",{label:e.label,widgetConfig:{disabled:n},buttonAttrs:r})}}});
$rset("rhtml","taglibs/test/Container",function(e,t){var n=e.e,r=e.ne,i=e.x;return function(e,t){var n=e.widget,r=e.title;t.w("<div><h1>").w(i(r)).w('</h1><div class="bd">'),e.invokeBody(),t.w("</div></div>")}});
define.Class("taglibs.test.Container.ContainerTag",function(e){return{process:function(e,t){t.renderTemplate("taglibs/test/Container",{title:e.title,invokeBody:e.invokeBody})}}});
define.Class("taglibs.test.Greeting.GreetingTag",function(e){var t=function(){};return t.prototype={process:function(e,t){t.write("Hello "+e.name+"!")}},t});
define.Class("taglibs.test.Tab.TabTag",function(e){var t=function(){};return t.prototype={process:function(e,t){var n=e.tabs;n.addTab(e)}},t});
$rset("rhtml","taglibs/test/Tabs",function(e,t){var n=e.e,r=e.ne,i=e.f,s=e.xa,o=e.x;return function(e,t){var n=e.tabs;t.w('<div class="tabs"><ul class="nav nav-tabs">'),i(n,function(e){t.w("<li").a("class",e.liClass).w('><a href="#').w(s(e.id)).w('" data-toggle="tab">').w(o(e.title)).w("</a></li>")}),t.w('</ul><div class="tab-content">'),i(n,function(e){t.w("<div").a("id",e.id).a("class",e.divClass).w(">"),e.invokeBody(),t.w("</div>")}),t.w("</div></div>")}});
define.Class("taglibs.test.Tabs.TabsTag",["raptor"],function(e,t){var n=t("raptor/templating"),r=function(){};return r.prototype={process:function(t,r){var i=[],s=!1;t.invokeBody({addTab:function(e){e.active&&(e.activeFound=!0),e.id="tab"+i.length,i.push(e)}}),!s&&i.length&&(i[0].active=!0),e.forEach(i,function(e){e.liClass=e.active?"active":"",e.divClass=e.active?"tab-pane active":"tab-pane"}),n.render("taglibs/test/Tabs",{tabs:i},r)}},r});
define("taglibs.test.TestFunctions",{upperCase:function(e){return e?e.toString().toUpperCase():""},reverse:function(e){var t="";for(var n=e.length-1;n>=0;n--)t+=e.charAt(n);return t}});
$rset("resource","/taglibs/test/test.rtld",'<raptor-taglib>\n    \n    <tlib-version>1.0</tlib-version>\n    <short-name>test</short-name>\n    <uri>http://raptorjs.org/templates/test</uri>\n    \n    <import-taglib path="/taglibs/test/Button/Button.rtld"/>\n    <import-taglib path="/taglibs/test/Container/Container.rtld"/>\n    <import-taglib path="/taglibs/test/Greeting/Greeting.rtld"/>\n    <import-taglib path="/taglibs/test/Tab/Tab.rtld"/>\n    <import-taglib path="/taglibs/test/Tabs/Tabs.rtld"/>\n    \n    <function class="taglibs.test.TestFunctions">\n        <name>upperCase</name>\n    </function>\n    \n    <function class="taglibs.test.TestFunctions">\n        <name>reverse</name>\n    </function>\n\n</raptor-taglib>'),$radd("rtld","/taglibs/test/test.rtld");
$rset("resource","/taglibs/test/Button/Button.rtld",'<raptor-taglib>\n\n    <tag>\n        <name>button</name>\n        <handler-class>taglibs.test.Button.ButtonTag</handler-class>\n        \n        <attribute name="label"/>\n        <attribute name="type"/>\n        <attribute name="color"/>\n        <attribute name="disabled" type="boolean"/>\n        <attribute name="id" uri="widgets" type="string"/>\n    </tag>\n    \n</raptor-taglib>');
$rset("resource","/taglibs/test/Container/Container.rtld",'<raptor-taglib>\n\n    <tag>\n        <name>container</name>\n        <handler-class>taglibs.test.Container.ContainerTag</handler-class>\n        \n        <attribute name="title"/>\n    </tag>\n    \n</raptor-taglib>');
$rset("resource","/taglibs/test/Greeting/Greeting.rtld","<raptor-taglib>\n\n    <tag>\n        <name>greeting</name>\n        <handler-class>taglibs.test.Greeting.GreetingTag</handler-class>\n        <attribute>\n            <name>name</name>\n        </attribute>\n        <attribute>\n            <name>adult</name>\n            <type>boolean</type>\n        </attribute>\n    </tag>\n    \n</raptor-taglib>");
$rset("resource","/taglibs/test/Tab/Tab.rtld",'<raptor-taglib>\n\n    <tag>\n        <name>tab</name>\n        <handler-class>taglibs.test.Tab.TabTag</handler-class>\n        \n        <attribute name="title"/>\n        \n        <import-variable target-property="tabs" expression="tabs"/>\n    </tag>\n    \n</raptor-taglib>');
$rset("resource","/taglibs/test/Tabs/Tabs.rtld",'<raptor-taglib>\n\n    <tag>\n        <name>tabs</name>\n        <handler-class>taglibs.test.Tabs.TabsTag</handler-class>\n        <variable name="tabs"/>\n    </tag>\n    \n</raptor-taglib>');
define("components.buttons.Button.ButtonWidget",["raptor"],function(e,t){var n=function(e){var t=this;this.toggled=!1,this.jqueryButton=this.$(),this._toggle=e.toggle,e.toggled&&this.toggle(),this.$().click(function(){t.publish("click",{button:this}),t._toggle&&t.toggle()})};return n.events=["click","toggle"],n.controller="components.buttons.Button.ButtonTag",n.prototype={toggle:function(){this.toggled=!this.toggled,this.jqueryButton.button("toggle"),this.publish("toggle",{button:this})}},n});
!function(e){"use strict";var t=function(t){this.element=e(t)};t.prototype={constructor:t,show:function(){var t=this.element,n=t.closest("ul:not(.dropdown-menu)"),r=t.attr("data-target"),i,s,o;r||(r=t.attr("href"),r=r&&r.replace(/.*(?=#[^\s]*$)/,""));if(t.parent("li").hasClass("active"))return;i=n.find(".active a").last()[0],o=e.Event("show",{relatedTarget:i}),t.trigger(o);if(o.isDefaultPrevented())return;s=e(r),this.activate(t.parent("li"),n),this.activate(s,s.parent(),function(){t.trigger({type:"shown",relatedTarget:i})})},activate:function(t,n,r){function o(){i.removeClass("active").find("> .dropdown-menu > .active").removeClass("active"),t.addClass("active"),s?(t[0].offsetWidth,t.addClass("in")):t.removeClass("fade"),t.parent(".dropdown-menu")&&t.closest("li.dropdown").addClass("active"),r&&r()}var i=n.find("> .active"),s=r&&e.support.transition&&i.hasClass("fade");s?i.one(e.support.transition.end,o):o(),i.removeClass("in")}},e.fn.tab=function(n){return this.each(function(){var r=e(this),i=r.data("tab");i||r.data("tab",i=new t(this)),typeof n=="string"&&i[n]()})},e.fn.tab.Constructor=t,e(function(){e("body").on("click.tab.data-api",'[data-toggle="tab"], [data-toggle="pill"]',function(t){t.preventDefault(),e(this).tab("show")})})}(window.jQuery);
define("components.nav.Nav.NavItemWidget",["raptor"],function(e,t){var n=function(e){var t=this;this.$().click(function(){t.publish("click",{el:this,nav:t})})};return n.events=["click"],n.prototype={show:function(){this.$("a").tab("show")}},n});
define("components.templates.Errors.ErrorsWidget",["raptor"],function(e,t){var n=function(e){this._hasErrors=!1};return n.prototype={setErrors:function(e){e&&e.length?(this.$("#ul").empty(),this.addErrors(e)):(this._hasErrors=!1,this.$("#ul").hide().empty())},clearErrors:function(){this.setErrors(null)},hasErrors:function(){return this._hasErrors},addErrors:function(n){if(n&&n.length){this._hasErrors=!0;var r=this.getEl("ul");e.forEach(n,function(e){var n=document.createElement("LI");n.innerHTML=t("raptor/templating").renderToString("components/templates/Errors-error",{message:e.message}),r.appendChild(n)},this),this.$("#ul").show()}}},n});
$rset("rhtml","components/templates/Errors-error",function(e,t){var n=e.e,r=e.ne,i=e.x;return function(e,t){var n=e.message;t.w('<span class="x">✘</span><pre class="message">').w(i(n)).w("</pre>")}});
define("components.templates.TemplateTestbed.TemplateTestbedWidget",["raptor"],function(raptor,require){var stringify=require("raptor/json/stringify"),TemplateTestbedWidget=function(e){this.samples=e.samples,this.activeSample=null,this.topLevelIndex=-1,this.autoRender=!0,this.compileRequired=!0,this.dataModified=!0,this.optionsModified=!0,this.renderRequired=!0,this.optionsVisible=!1,require("raptor/pubsub").subscribe({toggleAutoFormatHtml:function(){this.toggleAutoFormatHtml()}},this),this.defaultOptionsJson=stringify(require("raptor/templating/compiler").defaultOptions),this.loadSample(0);var t=this.widgets;t.renderButton.subscribe("click",function(e){this.update()},this),t.showCompiledToggleButton.subscribe("toggle",function(e){this.toggleCompiledOutput()},this),t.showOptionsToggleButton.subscribe("toggle",function(e){this.toggleCompilerOptions()},this),t.autoRenderToggleButton.subscribe("toggle",function(e){this.autoRender=!this.autoRender},this),t.templateEditor.subscribe("change",function(){this.compileRequired=!0,this.renderRequired=!0,this.autoRender&&this.update()},this),t.dataEditor.subscribe("change",function(){this.dataModified=!0,this.renderRequired=!0,this.autoRender&&this.update()},this),t.optionsEditor.subscribe("change",function(){this.optionsModified=!0,this.compileRequired=!0,this.renderRequired=!0,this.autoRender&&this.update()},this),require("raptor/pubsub").subscribe("loadSample",function(e){this.loadSample(e.sampleIndex)},this)};return TemplateTestbedWidget.prototype={loadSample:function(e){var t=this.samples,n,r,i=this.widgets;raptor.forEach(e,function(e){n=t[e],t=n?n.samples:null});while(!n.path){if(!n.samples)break;n=n.samples[0]}if(n===this.activeSample)return;if(typeof e=="number"){this.topLevelIndex!=-1&&$("#subsamples-"+this.topLevelIndex).slideToggle(),this.topLevelIndex=e,$("#subsamples-"+e).slideToggle();var s=this.getWidget("subSampleNavItem-"+n.path);s&&s.show()}this.activeSample=n,n.templatesLoaded||(raptor.forEach(n.templates,function(e){require("raptor/templating/compiler").compileAndLoad(e.source,e.path)},this),n.templatesLoaded=!0),i.templateEditor.setValue(n.template),i.dataEditor.setValue(n.data),i.optionsEditor.setValue(n.options||this.defaultOptionsJson),this.update(),n.showCompilerOptions&&(this.optionsVisible||i.showOptionsToggleButton.toggle())},handleEditorException:function(e,t){var n=t.errors;n||(n=[{message:t.toString()}]),e.addErrors(n)},update:function(){var e=this.widgets;this.updateJson("compilerOptions","optionsModified",e.optionsEditor,e.optionsErrors),this.compileTemplate(),this.updateJson("templateData","dataModified",e.dataEditor,e.dataErrors),this.renderTemplate()},compileTemplate:function(){if(!this.compilerOptions)return;if(!this.compileRequired)return;this.templateName=null;var widgets=this.widgets,templateSrc=widgets.templateEditor.getValue(),compiler=require("raptor/templating/compiler"),compiledSrc;widgets.templateErrors.clearErrors();var templateDom;try{templateDom=require("raptor/xml/dom").createParser().parse(templateSrc)}catch(e){this.handleEditorException(widgets.templateErrors,"Invalid XML: "+e)}if(templateDom)try{var compilerOptions=raptor.extend({defaultTemplateName:"test",nameCallback:function(e){templateName=e}},this.compilerOptions);compiledSrc=compiler.compile(templateDom,"test",compilerOptions)}catch(e){window.console&&console.error(e),this.handleEditorException(widgets.templateErrors,e)}if(compiledSrc){widgets.compiledEditor.setValue(compiledSrc),require("raptor/templating").unload(templateName);try{eval(compiledSrc),this.templateName=templateName}catch(e){this.handleEditorException(widgets.templateErrors,e)}}else widgets.compiledEditor.setValue("");this.compileRequired=!1},updateJson:function(targetProp,modifiedProp,editor,errors){if(!this[modifiedProp])return;this[targetProp]=null,errors.clearErrors();var jsonData=editor.getValue(),data;try{data=eval("("+jsonData+")"),this[targetProp]=data}catch(e){this.handleEditorException(errors,e)}this[modifiedProp]=!1},renderTemplate:function(){if(!this.renderRequired)return;var e=this.widgets;if(this.templateData&&this.templateName&&this.compilerOptions)try{var t=require("raptor/templating").renderToString(this.templateName,this.templateData);e.outputEditor.setValue(t),this.$("#htmlViewer").html(t)}catch(n){this.handleEditorException(e.templateErrors,n),e.outputEditor.setValue(""),this.$("#htmlViewer").html("")}else e.outputEditor.setValue(""),this.$("#htmlViewer").html("");this.renderRequired=!1},toggleCompiledOutput:function(){this.$("#compiledTemplateSection").toggle()},toggleCompilerOptions:function(e){if(arguments.length===1&&e===this.visible)return;this.optionsVisible=!this.optionsVisible,this.optionsVisible?this.$("#compilerOptionsSection").removeClass("compiler-options-hidden"):this.$("#compilerOptionsSection").addClass("compiler-options-hidden")},toggleAutoFormatHtml:function(){var e=this.widgets;e.outputEditor.setAutoFormat(!e.outputEditor.isAutoFormat())}},TemplateTestbedWidget});